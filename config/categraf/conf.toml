# Categraf 主配置文件
# 系统和应用监控配置

[global]
# 全局配置
hostname = ""
interval = 15
providers = ["local"]

# 日志配置
[log]
level = "INFO"
filename = "stdout"
max_size = 100
max_age = 3
max_backups = 3
local_time = true
compress = false

# HTTP 服务配置
[http]
enable = true
address = "0.0.0.0:9100"
print_access = false
run_mode = "release"

# 输出配置 - VictoriaMetrics
[[writers]]
url = "http://vmagent:8429/api/v1/write"
basic_auth_user = ""
basic_auth_pass = ""
timeout = 5000
dial_timeout = 2500
max_idle_conns_per_host = 100
headers = ["X-From=categraf"]

# 可选：备用输出到 VictoriaMetrics 集群
# [[writers]]
# url = "http://vminsert:8480/insert/0/prometheus/api/v1/write"
# basic_auth_user = ""
# basic_auth_pass = ""
# timeout = 5000

# 输入插件配置

# CPU 监控
[[inputs.cpu]]
interval = 15
collect_per_cpu = true
report_active = true

# 内存监控
[[inputs.mem]]
interval = 15

# 磁盘监控
[[inputs.disk]]
interval = 30
ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# 磁盘 IO 监控
[[inputs.diskio]]
interval = 15

# 网络监控
[[inputs.net]]
interval = 15
ignore_protocol_stats = false

# 网络连接监控
[[inputs.netstat]]
interval = 30

# 系统负载监控
[[inputs.system]]
interval = 15

# 进程监控
[[inputs.processes]]
interval = 30

# 内核监控
[[inputs.kernel]]
interval = 30

# 内核 VMStat 监控
[[inputs.kernel_vmstat]]
interval = 30

# 文件系统监控
[[inputs.linux_sysctl_fs]]
interval = 60

# Conntrack 监控
[[inputs.conntrack]]
interval = 30

# NTP 时间同步监控
[[inputs.ntp]]
interval = 300
servers = ["pool.ntp.org"]

# Docker 容器监控
[[inputs.docker]]
interval = 30
endpoint = "unix:///var/run/docker.sock"
gather_services = false
container_names = []
container_name_include = []
container_name_exclude = []
timeout = "5s"
perdevice = true
total = false

# Nginx 监控（如果启用了 stub_status）
# [[inputs.nginx]]
# interval = 30
# urls = ["http://localhost/nginx_status"]
# response_timeout = "5s"

# Redis 监控
# [[inputs.redis]]
# interval = 30
# servers = ["tcp://localhost:6379"]
# password = ""

# PostgreSQL 监控
# [[inputs.postgresql]]
# interval = 30
# address = "host=localhost user=postgres dbname=postgres sslmode=disable"
# max_lifetime = "0s"
# databases = ["postgres"]

# MySQL 监控
# [[inputs.mysql]]
# interval = 30
# address = "root:password@tcp(localhost:3306)/"
# gather_process_list = true
# gather_info_schema_auto_inc = true
# gather_slave_lag = true
# gather_binary_logs = false
# gather_table_io_waits = false
# gather_table_lock_waits = false
# gather_index_io_waits = false
# gather_event_waits = false
# gather_file_events_stats = false
# gather_perf_events_statements = false

# Prometheus 远程写入监控
[[inputs.prometheus]]
interval = 30
urls = [
  "http://vmagent:8429/metrics",
  "http://victoriametrics:8428/metrics",
  "http://alertmanager:9093/metrics",
  "http://grafana:3000/metrics"
]
response_timeout = "5s"
metric_version = 2

# 端口监控
[[inputs.net_response]]
interval = 30
protocol = "tcp"
address = "localhost:22"
timeout = "3s"
read_timeout = "3s"
send = ""
expect = ""

[[inputs.net_response]]
interval = 30
protocol = "tcp"
address = "localhost:80"
timeout = "3s"

[[inputs.net_response]]
interval = 30
protocol = "tcp"
address = "localhost:443"
timeout = "3s"

# HTTP 响应监控
[[inputs.http_response]]
interval = 60
urls = [
  "http://localhost",
  "https://localhost"
]
response_timeout = "5s"
method = "GET"
follow_redirects = false

# 自定义脚本监控
# [[inputs.exec]]
# interval = 60
# commands = [
#   "/usr/local/bin/custom_script.sh",
#   "python3 /opt/monitoring/custom_check.py"
# ]
# timeout = "10s"
# data_format = "influx"

# JMX 监控（Java 应用）
# [[inputs.jolokia2_agent]]
# interval = 30
# urls = ["http://localhost:8080/jolokia"]
# 
# [[inputs.jolokia2_agent.metric]]
# name = "java_runtime"
# mbean = "java.lang:type=Runtime"
# attribute = "Uptime"

# SNMP 监控（通过 Categraf 内置 SNMP 插件）
# [[inputs.snmp]]
# interval = 60
# agents = ["192.168.1.1:161"]
# version = 2
# community = "public"
# timeout = "5s"
# retries = 3
# 
# [[inputs.snmp.field]]
# name = "hostname"
# oid = "1.3.6.1.2.1.1.5.0"
# 
# [[inputs.snmp.field]]
# name = "uptime"
# oid = "1.3.6.1.2.1.1.3.0"

# 日志监控
# [[inputs.tail]]
# interval = 10
# files = [
#   "/var/log/nginx/access.log",
#   "/var/log/nginx/error.log",
#   "/var/log/syslog"
# ]
# from_beginning = false
# pipe = false
# watch_method = "inotify"
# data_format = "grok"
# grok_patterns = [
#   "%{COMBINED_LOG_FORMAT}"
# ]

# 温度监控
# [[inputs.temp]]
# interval = 30

# 智能硬盘监控
# [[inputs.smart]]
# interval = 300
# path = "/usr/sbin/smartctl"
# nocheck = "standby"
# attributes = true
# excludes = [ "loop[0-9]*", "ram[0-9]*" ]

# 自定义标签
[global.labels]
environment = "production"
region = "local"
team = "ops"